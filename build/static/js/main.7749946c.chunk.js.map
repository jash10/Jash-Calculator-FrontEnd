{"version":3,"sources":["components/Button.jsx","components/Input.jsx","App.js","reportWebVitals.js","index.js"],"names":["isOperator","val","isNaN","isNumber","Button","props","className","children","match","onClick","handleClick","Input","input","App","useState","setInput","history","setHistory","populateInputField","getLast10Calculations","axios","get","then","response","data","useEffect","map","historyArray","Calculation","id","e","length","toString","slice","result","math","error","console","calculation","post","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7749946c.chunk.js","sourcesContent":["import { React } from \"react\";\nimport \"./Components.css\";\n\nconst isOperator = (val) => {\n  return !isNaN(val) || val === \".\" || val === \"=\";\n};\n\nconst isNumber = (val) => {\n  return isNaN(val);\n};\n\nconst isClearButton = (val) => {\n  return val.match(/[a-z]/i);\n};\n\nexport const Button = (props) => (\n  <div\n    className={`button-wrapper ${\n      isOperator(props.children) ? null : \"operator\"\n    } ${\n      !(\n        isClearButton(props.children) &&\n        !isOperator(props.children) &&\n        isNumber(props.children)\n      )\n        ? null\n        : \"clearButton\"\n    }`}\n    onClick={() => props.handleClick(props.children)}\n  >\n    {props.children}\n  </div>\n);\n","import { React } from \"react\";\nimport \"./Components.css\";\n\nexport const Input = (props) => <div className=\"input\">{props.input}</div>;\n","import \"./App.css\";\nimport { Button } from \"./components/Button\";\nimport { Input } from \"./components/Input\";\nimport { React, useState, useEffect } from \"react\";\nimport * as math from \"mathjs\";\nimport axios from \"axios\";\n\nfunction App() {\n  const [input, setInput] = useState(\"\");\n  const [history, setHistory] = useState([]);\n\n  function handleClear(e) {\n    setInput(\"\");\n  }\n\n  function handleBackspace() {\n    if (input.length !== 0) {\n      setInput(input.toString().slice(0, -1));\n    }\n  }\n\n  function populateInputField(val) {\n    setInput(input + val);\n  }\n\n  useEffect(() => {\n    getLast10Calculations();\n  }, []);\n\n  function getLast10Calculations() {\n    axios\n      .get(\"https://polar-dusk-98579.herokuapp.com/history\")\n      .then((response) => response.data)\n      .then((response) => setHistory(response));\n  }\n\n  function handleResult() {\n    var result = \"Invalid Input\";\n    try {\n      result = math.evaluate(input);\n    } catch (error) {\n      console.error(\"Invalid Input Given\");\n    }\n    const calculation = input + \" = \" + result;\n    if (!(input === result && result !== \"Invalid Input\")) {\n      axios.post(\"https://polar-dusk-98579.herokuapp.com/addCalculation\", {\n        calculation,\n      });\n    }\n    setInput(result);\n    getLast10Calculations();\n  }\n\n  return (\n    <div className=\"App\">\n      <div className=\"last10Calculations\">\n        <h1 className=\"calculation\">Last 10 Calculations</h1>\n        {history.map((historyArray) => (\n          <div key={historyArray.id} className=\"calculation\">\n            {\" \"}\n            {historyArray.Calculation}\n          </div>\n        ))}\n      </div>\n      <div className=\"calc-wrapper\">\n        <Input input={input}></Input>\n        <div className=\"row\">\n          <Button handleClick={handleClear}>AC</Button>\n          <Button handleClick={handleBackspace}>C</Button>\n          <Button handleClick={populateInputField}>%</Button>\n          <Button handleClick={populateInputField}>/</Button>\n        </div>\n        <div className=\"row\">\n          <Button handleClick={populateInputField}>7</Button>\n          <Button handleClick={populateInputField}>8</Button>\n          <Button handleClick={populateInputField}>9</Button>\n          <Button handleClick={populateInputField}>*</Button>\n        </div>\n        <div className=\"row\">\n          <Button handleClick={populateInputField}>4</Button>\n          <Button handleClick={populateInputField}>5</Button>\n          <Button handleClick={populateInputField}>6</Button>\n          <Button handleClick={populateInputField}>-</Button>\n        </div>\n        <div className=\"row\">\n          <Button handleClick={populateInputField}>1</Button>\n          <Button handleClick={populateInputField}>2</Button>\n          <Button handleClick={populateInputField}>3</Button>\n          <Button handleClick={populateInputField}>+</Button>\n        </div>\n        <div className=\"row\">\n          <Button handleClick={populateInputField}>0</Button>\n          <Button handleClick={populateInputField}>.</Button>\n          <Button handleClick={handleResult}>=</Button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}